#yml
image: docker:19.03.8

stages:
  - docker
  - deploy

docker_production:
    stage: docker
    services:
        - docker:19.03.8-dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $CI_REGISTRY_IMAGE:production || true
        - docker build --tag $CI_REGISTRY_IMAGE:production .
        - docker push $CI_REGISTRY_IMAGE:production
    only:
        - master           

deploy_production:
    stage: deploy
    image: alpine
    environment: production
    script:
        - apk update
        - apk add --update --no-cache openssh sshpass
        - mkdir products-api
        - chmod +x products-api
        - mv docker-compose.yml products-api/docker-compose.yml
        - touch key.pem
        - export keyfile=./key.pem
        - print "%s" "$AWS_PEM" > "$keyfile"
        - chmod 400 key.pem
        - sshpass scp -i "key.pem" -o stricthostkeychecking=no -r products-api ubuntu@${SERVER_IP}:~/
        - sshpass ssh -i "key.pem" -o StrictHostKeyChecking=no ubuntu@${SERVER_IP} "cd ~/products-api;sudo docker products -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY};sudo docker-compose down;sudo docker image rm ${CI_REGISTRY_IMAGE}:production;sudo docker-compose up -d;"
    only:
        - master
